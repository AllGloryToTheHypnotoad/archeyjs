#! /bin/sh

### BEGIN INIT INFO
# Provides:		    archeyjs
# Required-Start:	$remote_fs $syslog
# Required-Stop:	$remote_fs $syslog
# Default-Start:	2 3 4 5
# Default-Stop:		
# Short-Description:	node.js archey server
### END INIT INFO

PRG="archeyjs"
DAEMON="/usr/local/bin/$PRG"
PID="/var/run/archeyjs.pid"
ARGS="--port 9000 --no-static"


# CONFIG="/etc/default/archeyjs"

set -e

# /etc/init.d/ssh: start and stop the OpenBSD "secure shell(tm)" daemon

# test -x /usr/sbin/sshd || exit 0
# ( /usr/sbin/sshd -\? 2>&1 | grep -q OpenSSH ) 2>/dev/null || exit 0

# umask 022

# check defaults
# if test -f $CONFIG; then
#     . $CONFIG
# fi

. /lib/lsb/init-functions

# if [ -n "$2" ]; then
#     ARGS="$ARGS $2"
# fi

# Are we running from init?
run_by_init() {
    ([ "$previous" ] && [ "$runlevel" ]) || [ "$runlevel" = S ]
}

# check_for_upstart() {
#     if init_is_upstart; then
# 	exit $1
#     fi
# }

# check_for_no_start() {
#     # forget it if we're trying to start, and /etc/ssh/sshd_not_to_be_run exists
#     if [ -e /etc/ssh/sshd_not_to_be_run ]; then 
# 	if [ "$1" = log_end_msg ]; then
# 	    log_end_msg 0 || true
# 	fi
# 	if ! run_by_init; then
# 	    log_action_msg "OpenBSD Secure Shell server not in use (/etc/ssh/sshd_not_to_be_run)" || true
# 	fi
# 	exit 0
#     fi
# }

# check_dev_null() {
#     if [ ! -c /dev/null ]; then
# 	if [ "$1" = log_end_msg ]; then
# 	    log_end_msg 1 || true
# 	fi
# 	if ! run_by_init; then
# 	    log_action_msg "/dev/null is not a character device!" || true
# 	fi
# 	exit 1
#     fi
# }

# check_privsep_dir() {
#     # Create the PrivSep empty dir if necessary
#     if [ ! -d /var/run/sshd ]; then
# 	mkdir /var/run/sshd
# 	chmod 0755 /var/run/sshd
#     fi
# }

# check_config() {
# #     if [ ! -e /etc/ssh/sshd_not_to_be_run ]; then
# 	$DAEMON $ARGS -t || exit 1
# #     fi
# }

export PATH="${PATH:+$PATH:}/usr/local/bin"

case "$1" in
  start)
# 	check_for_upstart 1
# 	check_privsep_dir
# 	check_for_no_start
# 	check_dev_null
	log_daemon_msg "Starting archeyjs server" "archeyjs" || true
# 	if start-stop-daemon --start --quiet --oknodo --pidfile $PID --exec $DAEMON -- $ARGS; then
	if start-stop-daemon --start --pidfile $PID --exec $DAEMON -- $ARGS; then
	    log_end_msg 0 || true
	else
	    log_end_msg 1 || true
	fi
	;;
  stop)
# 	check_for_upstart 0
	log_daemon_msg "Stopping archeyjs server" "archeyjs" || true
# 	if start-stop-daemon --stop --quiet --oknodo --pidfile $PID; then
	if start-stop-daemon --stop --pidfile $PID; then
	    log_end_msg 0 || true
	else
	    log_end_msg 1 || true
	fi
	;;

#   reload|force-reload)
# 	check_for_upstart 1
# 	check_for_no_start
# 	check_config
# 	log_daemon_msg "Reloading archeyjs server's configuration" "archeyjs" || true
# 	if start-stop-daemon --stop --signal 1 --quiet --oknodo --pidfile $PID --exec $DAEMON; then
# 	    log_end_msg 0 || true
# 	else
# 	    log_end_msg 1 || true
# 	fi
# 	;;

  restart)
# 	check_for_upstart 1
# 	check_privsep_dir
# 	check_config
	log_daemon_msg "Restarting archeyjs server" "archeyjs" || true
# 	start-stop-daemon --stop --quiet --oknodo --retry 30 --pidfile $PID
	start-stop-daemon --stop --pidfile $PID
# 	check_for_no_start log_end_msg
# 	check_dev_null log_end_msg
# 	if start-stop-daemon --start --quiet --oknodo --pidfile $PID --exec $DAEMON -- $ARGS; then
	if start-stop-daemon --start --pidfile $PID --exec $DAEMON -- $ARGS; then
	    log_end_msg 0 || true
	else
	    log_end_msg 1 || true
	fi
	;;

#   try-restart)
# 	check_for_upstart 1
# # 	check_privsep_dir
# # 	check_config
# 	log_daemon_msg "Restarting archeyjs server" "archeyjs" || true
# 	RET=0
# 	start-stop-daemon --stop --quiet --retry 30 --pidfile $PID || RET="$?"
# 	case $RET in
# 	    0)
# 		# old daemon stopped
# # 		check_for_no_start log_end_msg
# # 		check_dev_null log_end_msg
# 		if start-stop-daemon --start --quiet --oknodo --pidfile $PID --exec $DAEMON -- $ARGS; then
# 		    log_end_msg 0 || true
# 		else
# 		    log_end_msg 1 || true
# 		fi
# 		;;
# 	    1)
# 		# daemon not running
# 		log_progress_msg "(not running)" || true
# 		log_end_msg 0 || true
# 		;;
# 	    *)
# 		# failed to stop
# 		log_progress_msg "(failed to stop)" || true
# 		log_end_msg 1 || true
# 		;;
# 	esac
	;;

  status)
# 	check_for_upstart 1
	status_of_proc -p $PID $DAEMON archeyjs && exit 0 || exit $?
	;;

  *)
	log_action_msg "Usage: /etc/init.d/archeyjs {start|stop|reload|force-reload|restart|try-restart|status}" || true
	exit 1
esac

exit 0
